{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourceName": {
      "type": "string"
    },
    "BotAadAppId": {
      "type": "string"
    },
    "BotRegistrationName": {
      "type": "string"
    },
    "BotDisplayName": {
      "type": "string"
    },
    "BotDescription": {
      "type": "string"
    },
    "Environment": {
      "type": "string"
    },
    "DeveloperAccessPolicyEnabled": {
      "type": "bool"
    }
  },
  "variables": {
    "ResourceNameWithoutHyphens": "[replace(parameters('ResourceName'), '-', '')]",
    "AadDeveloperObjectId": "59b1572c-d127-4c2c-a695-19a8a0927a30"
  },
  "resources": [
    {
      "type": "microsoft.operationalinsights/workspaces",
      "apiVersion": "2020-10-01",
      "name": "[parameters('ResourceName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "workspaceCapping": {
          "dailyQuotaGb": -1
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('ResourceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('microsoft.operationalinsights/workspaces', parameters('ResourceName'))]"
      ],
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "WorkspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('ResourceName'))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2020-08-01-preview",
      "name": "[variables('ResourceNameWithoutHyphens')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[parameters('ResourceName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('ResourceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('ResourceName'))]"
      ],
      "kind": "app,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('ResourceName'))]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('ResourceName'), '/appsettings')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('ResourceName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('ResourceName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('ResourceName'))]"
      ],
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('ResourceName')), '2015-05-01').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', parameters('ResourceName')), '2015-05-01').ConnectionString]",
        "KeyVaultUri": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('ResourceName')), '2018-02-14').vaultUri]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(parameters('ResourceName'), '/web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('ResourceName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('ResourceName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('ResourceName'))]"
      ],
      "properties": {
        "linuxFxVersion": "DOTNETCORE|5.0",
        "use32BitWorkerProcess": false,
        "webSocketsEnabled": true,
        "alwaysOn": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[parameters('ResourceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('ResourceName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('ResourceName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "Premium"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('ResourceName')), '2019-08-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [],
              "secrets": [
                "Get",
                "List"
              ],
              "certificates": []
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true
      }
    },
    {
      "condition": "[bool(parameters('DeveloperAccessPolicyEnabled'))]",
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2016-10-01",
      "name": "[concat(parameters('ResourceName'), '/add')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('ResourceName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[variables('AadDeveloperObjectId')]",
            "permissions": {
              "keys": [],
              "secrets": [
                "get",
                "list",
                "set",
                "delete"
              ],
              "certificates": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(parameters('ResourceName'), '/AzureStorageOptions--ConnectionString')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('ResourceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('ResourceNameWithoutHyphens'))]"
      ],
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('ResourceNameWithoutHyphens'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('ResourceNameWithoutHyphens')),'2015-05-01-preview').key1)]",
        "attributes": {
          "enabled": true
        }
      }
    }
  ]
}